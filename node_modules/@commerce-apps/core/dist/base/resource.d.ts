export declare type BasicHeaders = Record<string, string>;
export declare type BaseUriParameters = Record<string, string>;
export declare type PathParameters = Record<string, string>;
export declare type QueryParameters = Record<string, boolean | string | number | string[] | number[]>;
/**
 * A class to render a flattened URL from the parts including template
 * parameters. Out of the various options to render an array in a query string,
 * this class repeats the value for each element of the array,
 * i.e. { a: [1, 2]} => "?a=1&a=2".
 *
 * @class Resource
 */
export declare class Resource {
    private baseUri;
    private baseUriParameters;
    private path;
    private pathParameters;
    private queryParameters;
    constructor(baseUri: string, baseUriParameters?: BaseUriParameters, path?: string, pathParameters?: PathParameters, queryParameters?: QueryParameters);
    /**
     * Substitutes template parameters in the path with matching parameters.
     *
     * @param path - String containing template parameters
     * @param parameters - All the parameters that should substitute the template
     * parameters
     * @returns Path with actual parameters
     */
    substitutePathParameters(path?: string, parameters?: PathParameters): string;
    /**
     * Create a url from a baseUri, path and query parameters.
     *
     * @returns Rendered URL
     */
    toString(): string;
}
